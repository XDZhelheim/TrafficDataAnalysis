// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: traffic_pb.proto

#include "traffic_pb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace its {
namespace service {
class TrafficMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrafficMeta>
      _instance;
} _TrafficMeta_default_instance_;
class DetailInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DetailInfo>
      _instance;
} _DetailInfo_default_instance_;
class TrafficFlowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrafficFlow>
      _instance;
} _TrafficFlow_default_instance_;
class TrafficDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrafficData>
      _instance;
} _TrafficData_default_instance_;
}  // namespace service
}  // namespace its
namespace protobuf_traffic_5fpb_2eproto {
void InitDefaultsTrafficMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::its::service::_TrafficMeta_default_instance_;
    new (ptr) ::its::service::TrafficMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::its::service::TrafficMeta::InitAsDefaultInstance();
}

void InitDefaultsTrafficMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTrafficMetaImpl);
}

void InitDefaultsDetailInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::its::service::_DetailInfo_default_instance_;
    new (ptr) ::its::service::DetailInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::its::service::DetailInfo::InitAsDefaultInstance();
}

void InitDefaultsDetailInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDetailInfoImpl);
}

void InitDefaultsTrafficFlowImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_traffic_5fpb_2eproto::InitDefaultsDetailInfo();
  {
    void* ptr = &::its::service::_TrafficFlow_default_instance_;
    new (ptr) ::its::service::TrafficFlow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::its::service::TrafficFlow::InitAsDefaultInstance();
}

void InitDefaultsTrafficFlow() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTrafficFlowImpl);
}

void InitDefaultsTrafficDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_traffic_5fpb_2eproto::InitDefaultsTrafficMeta();
  protobuf_traffic_5fpb_2eproto::InitDefaultsTrafficFlow();
  {
    void* ptr = &::its::service::_TrafficData_default_instance_;
    new (ptr) ::its::service::TrafficData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::its::service::TrafficData::InitAsDefaultInstance();
}

void InitDefaultsTrafficData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTrafficDataImpl);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficMeta, magic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficMeta, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficMeta, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficMeta, batch_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficMeta, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficMeta, extra_keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficMeta, extra_values_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::DetailInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::DetailInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::DetailInfo, link_off_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficFlow, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficFlow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficFlow, link_arr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficFlow, car_cnt_arr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficFlow, length_arr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficFlow, status_arr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficFlow, confidence_arr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficFlow, speed_without_light_arr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficFlow, speed_with_light_arr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficFlow, details_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficData, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::its::service::TrafficData, flow_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::its::service::TrafficMeta)},
  { 19, 25, sizeof(::its::service::DetailInfo)},
  { 26, 39, sizeof(::its::service::TrafficFlow)},
  { 47, 54, sizeof(::its::service::TrafficData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::its::service::_TrafficMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::its::service::_DetailInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::its::service::_TrafficFlow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::its::service::_TrafficData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "traffic_pb.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020traffic_pb.proto\022\013its.service\"\223\001\n\013Traf"
      "ficMeta\022\r\n\005magic\030\001 \002(\t\022\017\n\007version\030\002 \002(\r\022"
      "\021\n\tregion_id\030\003 \002(\005\022\022\n\nbatch_time\030\004 \002(\007\022\023"
      "\n\013update_time\030\005 \002(\007\022\022\n\nextra_keys\030\006 \003(\t\022"
      "\024\n\014extra_values\030\007 \003(\t\"\036\n\nDetailInfo\022\020\n\010l"
      "ink_off\030\001 \003(\r\"\335\001\n\013TrafficFlow\022\020\n\010link_ar"
      "r\030\001 \003(\006\022\023\n\013car_cnt_arr\030\002 \003(\005\022\022\n\nlength_a"
      "rr\030\003 \003(\r\022\022\n\nstatus_arr\030\004 \003(\r\022\026\n\016confiden"
      "ce_arr\030\005 \003(\r\022\037\n\027speed_without_light_arr\030"
      "\006 \003(\r\022\034\n\024speed_with_light_arr\030\007 \003(\r\022(\n\007d"
      "etails\030\010 \003(\0132\027.its.service.DetailInfo\"]\n"
      "\013TrafficData\022&\n\004meta\030\001 \002(\0132\030.its.service"
      ".TrafficMeta\022&\n\004flow\030\002 \002(\0132\030.its.service"
      ".TrafficFlowB\026\n\024com.didi.its.service"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 556);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "traffic_pb.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_traffic_5fpb_2eproto
namespace its {
namespace service {

// ===================================================================

void TrafficMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrafficMeta::kMagicFieldNumber;
const int TrafficMeta::kVersionFieldNumber;
const int TrafficMeta::kRegionIdFieldNumber;
const int TrafficMeta::kBatchTimeFieldNumber;
const int TrafficMeta::kUpdateTimeFieldNumber;
const int TrafficMeta::kExtraKeysFieldNumber;
const int TrafficMeta::kExtraValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrafficMeta::TrafficMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_traffic_5fpb_2eproto::InitDefaultsTrafficMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:its.service.TrafficMeta)
}
TrafficMeta::TrafficMeta(const TrafficMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      extra_keys_(from.extra_keys_),
      extra_values_(from.extra_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  magic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_magic()) {
    magic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.magic_);
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_time_) -
    reinterpret_cast<char*>(&version_)) + sizeof(update_time_));
  // @@protoc_insertion_point(copy_constructor:its.service.TrafficMeta)
}

void TrafficMeta::SharedCtor() {
  _cached_size_ = 0;
  magic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&update_time_) -
      reinterpret_cast<char*>(&version_)) + sizeof(update_time_));
}

TrafficMeta::~TrafficMeta() {
  // @@protoc_insertion_point(destructor:its.service.TrafficMeta)
  SharedDtor();
}

void TrafficMeta::SharedDtor() {
  magic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrafficMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrafficMeta::descriptor() {
  ::protobuf_traffic_5fpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_traffic_5fpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrafficMeta& TrafficMeta::default_instance() {
  ::protobuf_traffic_5fpb_2eproto::InitDefaultsTrafficMeta();
  return *internal_default_instance();
}

TrafficMeta* TrafficMeta::New(::google::protobuf::Arena* arena) const {
  TrafficMeta* n = new TrafficMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrafficMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:its.service.TrafficMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extra_keys_.Clear();
  extra_values_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!magic_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*magic_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&update_time_) -
        reinterpret_cast<char*>(&version_)) + sizeof(update_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TrafficMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:its.service.TrafficMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string magic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_magic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->magic().data(), static_cast<int>(this->magic().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "its.service.TrafficMeta.magic");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 region_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_region_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required fixed32 batch_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          set_has_batch_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &batch_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required fixed32 update_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {
          set_has_update_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string extra_keys = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_extra_keys()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extra_keys(this->extra_keys_size() - 1).data(),
            static_cast<int>(this->extra_keys(this->extra_keys_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "its.service.TrafficMeta.extra_keys");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string extra_values = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_extra_values()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extra_values(this->extra_values_size() - 1).data(),
            static_cast<int>(this->extra_values(this->extra_values_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "its.service.TrafficMeta.extra_values");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:its.service.TrafficMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:its.service.TrafficMeta)
  return false;
#undef DO_
}

void TrafficMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:its.service.TrafficMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string magic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->magic().data(), static_cast<int>(this->magic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "its.service.TrafficMeta.magic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->magic(), output);
  }

  // required uint32 version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // required int32 region_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->region_id(), output);
  }

  // required fixed32 batch_time = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->batch_time(), output);
  }

  // required fixed32 update_time = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->update_time(), output);
  }

  // repeated string extra_keys = 6;
  for (int i = 0, n = this->extra_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extra_keys(i).data(), static_cast<int>(this->extra_keys(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "its.service.TrafficMeta.extra_keys");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->extra_keys(i), output);
  }

  // repeated string extra_values = 7;
  for (int i = 0, n = this->extra_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extra_values(i).data(), static_cast<int>(this->extra_values(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "its.service.TrafficMeta.extra_values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->extra_values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:its.service.TrafficMeta)
}

::google::protobuf::uint8* TrafficMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:its.service.TrafficMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string magic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->magic().data(), static_cast<int>(this->magic().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "its.service.TrafficMeta.magic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->magic(), target);
  }

  // required uint32 version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // required int32 region_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->region_id(), target);
  }

  // required fixed32 batch_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->batch_time(), target);
  }

  // required fixed32 update_time = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->update_time(), target);
  }

  // repeated string extra_keys = 6;
  for (int i = 0, n = this->extra_keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extra_keys(i).data(), static_cast<int>(this->extra_keys(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "its.service.TrafficMeta.extra_keys");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->extra_keys(i), target);
  }

  // repeated string extra_values = 7;
  for (int i = 0, n = this->extra_values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extra_values(i).data(), static_cast<int>(this->extra_values(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "its.service.TrafficMeta.extra_values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->extra_values(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:its.service.TrafficMeta)
  return target;
}

size_t TrafficMeta::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:its.service.TrafficMeta)
  size_t total_size = 0;

  if (has_magic()) {
    // required string magic = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->magic());
  }

  if (has_version()) {
    // required uint32 version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  if (has_region_id()) {
    // required int32 region_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->region_id());
  }

  if (has_batch_time()) {
    // required fixed32 batch_time = 4;
    total_size += 1 + 4;
  }

  if (has_update_time()) {
    // required fixed32 update_time = 5;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t TrafficMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:its.service.TrafficMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required string magic = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->magic());

    // required uint32 version = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());

    // required int32 region_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->region_id());

    // required fixed32 batch_time = 4;
    total_size += 1 + 4;

    // required fixed32 update_time = 5;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string extra_keys = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->extra_keys_size());
  for (int i = 0, n = this->extra_keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->extra_keys(i));
  }

  // repeated string extra_values = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->extra_values_size());
  for (int i = 0, n = this->extra_values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->extra_values(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrafficMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:its.service.TrafficMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const TrafficMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrafficMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:its.service.TrafficMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:its.service.TrafficMeta)
    MergeFrom(*source);
  }
}

void TrafficMeta::MergeFrom(const TrafficMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:its.service.TrafficMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extra_keys_.MergeFrom(from.extra_keys_);
  extra_values_.MergeFrom(from.extra_values_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_magic();
      magic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.magic_);
    }
    if (cached_has_bits & 0x00000002u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000004u) {
      region_id_ = from.region_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      batch_time_ = from.batch_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      update_time_ = from.update_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TrafficMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:its.service.TrafficMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrafficMeta::CopyFrom(const TrafficMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:its.service.TrafficMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrafficMeta::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  return true;
}

void TrafficMeta::Swap(TrafficMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrafficMeta::InternalSwap(TrafficMeta* other) {
  using std::swap;
  extra_keys_.InternalSwap(&other->extra_keys_);
  extra_values_.InternalSwap(&other->extra_values_);
  magic_.Swap(&other->magic_);
  swap(version_, other->version_);
  swap(region_id_, other->region_id_);
  swap(batch_time_, other->batch_time_);
  swap(update_time_, other->update_time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrafficMeta::GetMetadata() const {
  protobuf_traffic_5fpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_traffic_5fpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DetailInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetailInfo::kLinkOffFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetailInfo::DetailInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_traffic_5fpb_2eproto::InitDefaultsDetailInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:its.service.DetailInfo)
}
DetailInfo::DetailInfo(const DetailInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      link_off_(from.link_off_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:its.service.DetailInfo)
}

void DetailInfo::SharedCtor() {
  _cached_size_ = 0;
}

DetailInfo::~DetailInfo() {
  // @@protoc_insertion_point(destructor:its.service.DetailInfo)
  SharedDtor();
}

void DetailInfo::SharedDtor() {
}

void DetailInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetailInfo::descriptor() {
  ::protobuf_traffic_5fpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_traffic_5fpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DetailInfo& DetailInfo::default_instance() {
  ::protobuf_traffic_5fpb_2eproto::InitDefaultsDetailInfo();
  return *internal_default_instance();
}

DetailInfo* DetailInfo::New(::google::protobuf::Arena* arena) const {
  DetailInfo* n = new DetailInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetailInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:its.service.DetailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  link_off_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DetailInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:its.service.DetailInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 link_off = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_link_off())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_link_off())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:its.service.DetailInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:its.service.DetailInfo)
  return false;
#undef DO_
}

void DetailInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:its.service.DetailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 link_off = 1;
  for (int i = 0, n = this->link_off_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->link_off(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:its.service.DetailInfo)
}

::google::protobuf::uint8* DetailInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:its.service.DetailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 link_off = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->link_off_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:its.service.DetailInfo)
  return target;
}

size_t DetailInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:its.service.DetailInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated uint32 link_off = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->link_off_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->link_off_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetailInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:its.service.DetailInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DetailInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DetailInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:its.service.DetailInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:its.service.DetailInfo)
    MergeFrom(*source);
  }
}

void DetailInfo::MergeFrom(const DetailInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:its.service.DetailInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  link_off_.MergeFrom(from.link_off_);
}

void DetailInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:its.service.DetailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetailInfo::CopyFrom(const DetailInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:its.service.DetailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetailInfo::IsInitialized() const {
  return true;
}

void DetailInfo::Swap(DetailInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetailInfo::InternalSwap(DetailInfo* other) {
  using std::swap;
  link_off_.InternalSwap(&other->link_off_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetailInfo::GetMetadata() const {
  protobuf_traffic_5fpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_traffic_5fpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TrafficFlow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrafficFlow::kLinkArrFieldNumber;
const int TrafficFlow::kCarCntArrFieldNumber;
const int TrafficFlow::kLengthArrFieldNumber;
const int TrafficFlow::kStatusArrFieldNumber;
const int TrafficFlow::kConfidenceArrFieldNumber;
const int TrafficFlow::kSpeedWithoutLightArrFieldNumber;
const int TrafficFlow::kSpeedWithLightArrFieldNumber;
const int TrafficFlow::kDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrafficFlow::TrafficFlow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_traffic_5fpb_2eproto::InitDefaultsTrafficFlow();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:its.service.TrafficFlow)
}
TrafficFlow::TrafficFlow(const TrafficFlow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      link_arr_(from.link_arr_),
      car_cnt_arr_(from.car_cnt_arr_),
      length_arr_(from.length_arr_),
      status_arr_(from.status_arr_),
      confidence_arr_(from.confidence_arr_),
      speed_without_light_arr_(from.speed_without_light_arr_),
      speed_with_light_arr_(from.speed_with_light_arr_),
      details_(from.details_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:its.service.TrafficFlow)
}

void TrafficFlow::SharedCtor() {
  _cached_size_ = 0;
}

TrafficFlow::~TrafficFlow() {
  // @@protoc_insertion_point(destructor:its.service.TrafficFlow)
  SharedDtor();
}

void TrafficFlow::SharedDtor() {
}

void TrafficFlow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrafficFlow::descriptor() {
  ::protobuf_traffic_5fpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_traffic_5fpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrafficFlow& TrafficFlow::default_instance() {
  ::protobuf_traffic_5fpb_2eproto::InitDefaultsTrafficFlow();
  return *internal_default_instance();
}

TrafficFlow* TrafficFlow::New(::google::protobuf::Arena* arena) const {
  TrafficFlow* n = new TrafficFlow;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrafficFlow::Clear() {
// @@protoc_insertion_point(message_clear_start:its.service.TrafficFlow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  link_arr_.Clear();
  car_cnt_arr_.Clear();
  length_arr_.Clear();
  status_arr_.Clear();
  confidence_arr_.Clear();
  speed_without_light_arr_.Clear();
  speed_with_light_arr_.Clear();
  details_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TrafficFlow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:its.service.TrafficFlow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 link_arr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 9u, input, this->mutable_link_arr())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_link_arr())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 car_cnt_arr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_car_cnt_arr())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_car_cnt_arr())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 length_arr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_length_arr())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_length_arr())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 status_arr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32u, input, this->mutable_status_arr())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_status_arr())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 confidence_arr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 40u, input, this->mutable_confidence_arr())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_confidence_arr())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 speed_without_light_arr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 48u, input, this->mutable_speed_without_light_arr())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_speed_without_light_arr())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 speed_with_light_arr = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56u, input, this->mutable_speed_with_light_arr())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_speed_with_light_arr())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .its.service.DetailInfo details = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:its.service.TrafficFlow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:its.service.TrafficFlow)
  return false;
#undef DO_
}

void TrafficFlow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:its.service.TrafficFlow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 link_arr = 1;
  for (int i = 0, n = this->link_arr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      1, this->link_arr(i), output);
  }

  // repeated int32 car_cnt_arr = 2;
  for (int i = 0, n = this->car_cnt_arr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->car_cnt_arr(i), output);
  }

  // repeated uint32 length_arr = 3;
  for (int i = 0, n = this->length_arr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->length_arr(i), output);
  }

  // repeated uint32 status_arr = 4;
  for (int i = 0, n = this->status_arr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->status_arr(i), output);
  }

  // repeated uint32 confidence_arr = 5;
  for (int i = 0, n = this->confidence_arr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      5, this->confidence_arr(i), output);
  }

  // repeated uint32 speed_without_light_arr = 6;
  for (int i = 0, n = this->speed_without_light_arr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      6, this->speed_without_light_arr(i), output);
  }

  // repeated uint32 speed_with_light_arr = 7;
  for (int i = 0, n = this->speed_with_light_arr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->speed_with_light_arr(i), output);
  }

  // repeated .its.service.DetailInfo details = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->details_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->details(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:its.service.TrafficFlow)
}

::google::protobuf::uint8* TrafficFlow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:its.service.TrafficFlow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 link_arr = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(1, this->link_arr_, target);

  // repeated int32 car_cnt_arr = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->car_cnt_arr_, target);

  // repeated uint32 length_arr = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->length_arr_, target);

  // repeated uint32 status_arr = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(4, this->status_arr_, target);

  // repeated uint32 confidence_arr = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(5, this->confidence_arr_, target);

  // repeated uint32 speed_without_light_arr = 6;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(6, this->speed_without_light_arr_, target);

  // repeated uint32 speed_with_light_arr = 7;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(7, this->speed_with_light_arr_, target);

  // repeated .its.service.DetailInfo details = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->details_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->details(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:its.service.TrafficFlow)
  return target;
}

size_t TrafficFlow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:its.service.TrafficFlow)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated fixed64 link_arr = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->link_arr_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->link_arr_size());
    total_size += data_size;
  }

  // repeated int32 car_cnt_arr = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->car_cnt_arr_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->car_cnt_arr_size());
    total_size += data_size;
  }

  // repeated uint32 length_arr = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->length_arr_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->length_arr_size());
    total_size += data_size;
  }

  // repeated uint32 status_arr = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->status_arr_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->status_arr_size());
    total_size += data_size;
  }

  // repeated uint32 confidence_arr = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->confidence_arr_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->confidence_arr_size());
    total_size += data_size;
  }

  // repeated uint32 speed_without_light_arr = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->speed_without_light_arr_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->speed_without_light_arr_size());
    total_size += data_size;
  }

  // repeated uint32 speed_with_light_arr = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->speed_with_light_arr_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->speed_with_light_arr_size());
    total_size += data_size;
  }

  // repeated .its.service.DetailInfo details = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->details_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->details(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrafficFlow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:its.service.TrafficFlow)
  GOOGLE_DCHECK_NE(&from, this);
  const TrafficFlow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrafficFlow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:its.service.TrafficFlow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:its.service.TrafficFlow)
    MergeFrom(*source);
  }
}

void TrafficFlow::MergeFrom(const TrafficFlow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:its.service.TrafficFlow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  link_arr_.MergeFrom(from.link_arr_);
  car_cnt_arr_.MergeFrom(from.car_cnt_arr_);
  length_arr_.MergeFrom(from.length_arr_);
  status_arr_.MergeFrom(from.status_arr_);
  confidence_arr_.MergeFrom(from.confidence_arr_);
  speed_without_light_arr_.MergeFrom(from.speed_without_light_arr_);
  speed_with_light_arr_.MergeFrom(from.speed_with_light_arr_);
  details_.MergeFrom(from.details_);
}

void TrafficFlow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:its.service.TrafficFlow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrafficFlow::CopyFrom(const TrafficFlow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:its.service.TrafficFlow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrafficFlow::IsInitialized() const {
  return true;
}

void TrafficFlow::Swap(TrafficFlow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrafficFlow::InternalSwap(TrafficFlow* other) {
  using std::swap;
  link_arr_.InternalSwap(&other->link_arr_);
  car_cnt_arr_.InternalSwap(&other->car_cnt_arr_);
  length_arr_.InternalSwap(&other->length_arr_);
  status_arr_.InternalSwap(&other->status_arr_);
  confidence_arr_.InternalSwap(&other->confidence_arr_);
  speed_without_light_arr_.InternalSwap(&other->speed_without_light_arr_);
  speed_with_light_arr_.InternalSwap(&other->speed_with_light_arr_);
  details_.InternalSwap(&other->details_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrafficFlow::GetMetadata() const {
  protobuf_traffic_5fpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_traffic_5fpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TrafficData::InitAsDefaultInstance() {
  ::its::service::_TrafficData_default_instance_._instance.get_mutable()->meta_ = const_cast< ::its::service::TrafficMeta*>(
      ::its::service::TrafficMeta::internal_default_instance());
  ::its::service::_TrafficData_default_instance_._instance.get_mutable()->flow_ = const_cast< ::its::service::TrafficFlow*>(
      ::its::service::TrafficFlow::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrafficData::kMetaFieldNumber;
const int TrafficData::kFlowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrafficData::TrafficData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_traffic_5fpb_2eproto::InitDefaultsTrafficData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:its.service.TrafficData)
}
TrafficData::TrafficData(const TrafficData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_meta()) {
    meta_ = new ::its::service::TrafficMeta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_flow()) {
    flow_ = new ::its::service::TrafficFlow(*from.flow_);
  } else {
    flow_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:its.service.TrafficData)
}

void TrafficData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flow_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(flow_));
}

TrafficData::~TrafficData() {
  // @@protoc_insertion_point(destructor:its.service.TrafficData)
  SharedDtor();
}

void TrafficData::SharedDtor() {
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete flow_;
}

void TrafficData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrafficData::descriptor() {
  ::protobuf_traffic_5fpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_traffic_5fpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrafficData& TrafficData::default_instance() {
  ::protobuf_traffic_5fpb_2eproto::InitDefaultsTrafficData();
  return *internal_default_instance();
}

TrafficData* TrafficData::New(::google::protobuf::Arena* arena) const {
  TrafficData* n = new TrafficData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrafficData::Clear() {
// @@protoc_insertion_point(message_clear_start:its.service.TrafficData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(meta_ != NULL);
      meta_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(flow_ != NULL);
      flow_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TrafficData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:its.service.TrafficData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .its.service.TrafficMeta meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .its.service.TrafficFlow flow = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_flow()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:its.service.TrafficData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:its.service.TrafficData)
  return false;
#undef DO_
}

void TrafficData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:its.service.TrafficData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .its.service.TrafficMeta meta = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->meta_, output);
  }

  // required .its.service.TrafficFlow flow = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->flow_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:its.service.TrafficData)
}

::google::protobuf::uint8* TrafficData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:its.service.TrafficData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .its.service.TrafficMeta meta = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->meta_, deterministic, target);
  }

  // required .its.service.TrafficFlow flow = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->flow_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:its.service.TrafficData)
  return target;
}

size_t TrafficData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:its.service.TrafficData)
  size_t total_size = 0;

  if (has_meta()) {
    // required .its.service.TrafficMeta meta = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->meta_);
  }

  if (has_flow()) {
    // required .its.service.TrafficFlow flow = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->flow_);
  }

  return total_size;
}
size_t TrafficData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:its.service.TrafficData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .its.service.TrafficMeta meta = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->meta_);

    // required .its.service.TrafficFlow flow = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->flow_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrafficData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:its.service.TrafficData)
  GOOGLE_DCHECK_NE(&from, this);
  const TrafficData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrafficData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:its.service.TrafficData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:its.service.TrafficData)
    MergeFrom(*source);
  }
}

void TrafficData::MergeFrom(const TrafficData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:its.service.TrafficData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_meta()->::its::service::TrafficMeta::MergeFrom(from.meta());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_flow()->::its::service::TrafficFlow::MergeFrom(from.flow());
    }
  }
}

void TrafficData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:its.service.TrafficData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrafficData::CopyFrom(const TrafficData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:its.service.TrafficData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrafficData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_meta()) {
    if (!this->meta_->IsInitialized()) return false;
  }
  return true;
}

void TrafficData::Swap(TrafficData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrafficData::InternalSwap(TrafficData* other) {
  using std::swap;
  swap(meta_, other->meta_);
  swap(flow_, other->flow_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrafficData::GetMetadata() const {
  protobuf_traffic_5fpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_traffic_5fpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service
}  // namespace its

// @@protoc_insertion_point(global_scope)
